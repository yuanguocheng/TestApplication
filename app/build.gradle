apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
import java.text.SimpleDateFormat

//需要手动设置时区，否则在不同的Android Studio 环境中可能导致运行出错
SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd")
simpleDateFormat.setTimeZone(TimeZone.getTimeZone("UTC+08:00"))

Date date = new Date()
String datetime = simpleDateFormat.format(date)
def time = "_" + datetime
android {

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    //所有版本配置写在config.gradle文件里面
    def config = rootProject.ext
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId "com.mumuxi.testapplication"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
    }

    signingConfigs {
        release {
            storeFile file("D:/Android/release.keystore.jks")
            storePassword "android"
            keyAlias "android"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //多渠道打包
    flavorDimensions("stage")
    productFlavors {//多渠道打包
        mumuxi {
            dimension "stage"
            signingConfig signingConfigs.release
        }
        mumuqingtian {
            dimension "stage"
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = 'TestApplication_' + "${time}${variant.name}-${variant.versionName}.apk"
        }
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "2g"
    }

    viewBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.1'

    annotationProcessor 'androidx.annotation:annotation:1.0.0'

    //leakcanary 内存泄漏检测工具
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    //butterknife
    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'

//    implementation project(path: ':ndktest')
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

}
